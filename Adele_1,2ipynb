{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Adele_1,2ipynb","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyM3bv7WHDG9uNIlyZjek91B"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":626},"id":"SM-zzwTE0AIu","executionInfo":{"status":"ok","timestamp":1632744408170,"user_tz":300,"elapsed":1988,"user":{"displayName":"GIDEON ADELE","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiYXGzyzcHDs8vG_Is4duD1dBbO1elGltU7HZq9hQ=s64","userId":"11007077947572020915"}},"outputId":"9a970325-3aea-41d6-8ba5-a7142d007c64"},"source":["#Question 2.1 & 2.2 Gideon Adele ML Assignment\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import random\n","\n","# Reading the data\n","x_train=np.loadtxt(\"/content/X_train.csv\")\n","y_train=np.loadtxt(\"/content/Y_train.csv\")\n","x_test=np.loadtxt(\"/content/X_test.csv\")\n","y_test=np.loadtxt(\"/content/Y_test.csv\")\n","\n","#taking the label/output column and reshaping\n","x= x_train\n","y_test = y_test.reshape(50,1)\n","y = y_train.reshape(100,1)\n","\n","#Setting w1,w2,b1,b2 and learning rate\n","number_of_neurons=5\n","w1=np.random.rand(number_of_neurons,2)\n","b1=np.random.rand(number_of_neurons,1)\n","w2=np.random.rand(1,number_of_neurons)\n","b2=np.random.rand(1,1)\n","learning_rate=1\n","\n","#learning_rate_range=np.random.uniform(0.001,1,25) #taking 25 learning between 0.001 and 1\n","\n","#Using the sigmoid function\n","def sigmoid (inp):\n","    return 1/(1+np.exp(-inp))\n","\n","mse_list2=[]\n","w1_list=[]\n","w2_list=[]\n","b1_list=[]\n","b2_list=[]\n","t11_list=[]\n","\n","for i in range (25):\n","    mse_list1=[]\n","    t1_list=[]\n","    t2_list=[]\n","    \n","    for j in range (100):\n","        #Forward feed\n","        z1=np.dot(w1,x[j].reshape(2,1))+b1\n","        a1=sigmoid(z1)\n","        z2=np.dot(w2,a1)+b2\n","        a2=sigmoid(z2)\n","        #print(a2)\n","        aa=np.round(a2,0)\n","\n","        #below if-else has been used to get the accuracy info\n","        if y[j]== aa or a2:\n","            t1_list.append(1)\n","        else:\n","            t2_list.append(1)\n","\n","        #Backprop\n","        dz2=a2-y[j].reshape(1,1)\n","        dw2=np.dot(dz2,a1.T)\n","        db2=dz2\n","\n","        dz1=np.dot(w2.T,a2-y[j].reshape(1,1))*sigmoid(z1)*(1-sigmoid(z1))\n","        dw1=np.dot(dz1,x[j].reshape(2,1).T)\n","        db1=dz1\n","        #update rules for the network\n","        w1=w1-learning_rate*dw1\n","        b1=b1-learning_rate*np.mean(db1)\n","        w2=w2-learning_rate*dw2\n","        b2=b2-learning_rate*np.mean(db2)\n","        #MSE claculation\n","        mse_ = ((y[j] - a2)**2)\n","        mse_list1.append(mse_)\n","\n","    w1_list.append(w1)\n","    w2_list.append(w2)\n","    b1_list.append(b1)\n","    b2_list.append(b2)\n","\n","    a=sum(mse_list1)/100\n","    mse_list2.append(a)\n","    b=(len(t1_list))/100\n","    t11_list.append(b)\n","\n","\n","print(\"Average MSE on Train data: \",sum(mse_list2)/25)\n","print(\"Average Accuracy on Train data: \",sum(t11_list)/25)\n","\n","mse_list4=[]\n","t33_list=[]\n","#This is the loop for the test data, training is not done here, I just use the 25 updated values here, u may just use the 25th updated one.\n","for i in range (len (w1_list)):\n","    t3_list=[]\n","    t4_list=[]\n","    mse_list3=[]\n","    for j in range (50):\n","        z1=np.dot(w1_list[i],x_test[j].reshape(2,1))+b1_list[i]\n","        a1=sigmoid(z1)\n","        z2=np.dot(w2_list[i],a1)+b2_list[i]\n","        a2=sigmoid(z2)\n","        #print(a2)\n","        aa=np.round(a2,0)\n","        y[j]=np.round(y[j],0)\n","        #Accuracy measure\n","        if y[j]== aa or a2:\n","            t3_list.append(1)\n","        else:\n","            t4_list.append(1)\n","\n","        mse= ((y_test[j]- a2)**2)\n","        mse_list3.append(mse)\n","\n","\n","    #print(t1,t2)\n","    a=sum(mse_list3)/50\n","    mse_list4.append(a)\n","    b=(len(t3_list))/50\n","    t33_list.append(b)\n","print(\"Average MSE on Test data: \",sum(mse_list4)/25)\n","print(\"Average Accuracy on Test data: \",sum(t33_list)/25)\n","\n","L1=[k for i in mse_list2 for j in i for k in j]\n","plt.plot(np.arange(25),L1,'r-')\n","L1=[k for i in mse_list4 for j in i for k in j]\n","plt.plot(np.arange(25),L1,'g--')\n","plt.xlabel(\"Number of Iterations\")\n","plt.ylabel(\"MSE\")\n","plt.legend(('Train Data','Test Data'))\n","plt.show()\n","\n","plt.plot(np.arange(25),t11_list,'r')\n","plt.plot(np.arange(25),t33_list,'g')\n","plt.xlabel(\"Num of Iterations\")\n","plt.ylabel(\"Accuracy\")\n","plt.legend(('Train Data','Test Data'))\n","plt.show()"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:29: RuntimeWarning: overflow encountered in exp\n"]},{"output_type":"stream","name":"stdout","text":["Average MSE on Train data:  [[5698.98287265]]\n","Average Accuracy on Train data:  0.9052\n","Average MSE on Test data:  [[5617.21537258]]\n","Average Accuracy on Test data:  0.9048\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]}]}